declare class Assistant {
    private apiKey;
    private apiUrl;
    private apiModel;
    private isOpenAI;
    constructor(options?: AssistantType);
    private sendToClaude;
    private sendToGPT;
    private sendMessage;
    translateText(text: string, lang?: string, context?: string): Promise<string>;
    detectLanguage(text: string): Promise<string>;
    correctText(text: string): Promise<string>;
    summarizeText(text: string, maxWords?: number): Promise<string>;
    generateText(prompt: string, maxWords?: number): Promise<string>;
    paraphraseText(text: string): Promise<string>;
    classifyText(text: string, categories: string[]): Promise<string>;
    extractKeywords(text: string, count?: number): Promise<string[]>;
    extractEntities(text: string): Promise<Record<string, string[]>>;
    analyzeSentiment(text: string): Promise<string>;
    checkForOffensiveLanguage(text: string): Promise<number>;
    checkForProfanity(text: string): Promise<number>;
    detectEmotion(text: string): Promise<string>;
    answerQuestion(question: string, context: string): Promise<string>;
    private getBase64Image;
    captionImage(imageBuffer: Buffer): Promise<string>;
    extractTextFromImage(imageBuffer: Buffer): Promise<string>;
    detectObjectsInImage(imageBuffer: Buffer): Promise<Record<string, number[]>>;
    searchObjectInImage(imageBuffer: Buffer, objectQuery: string): Promise<number[] | null>;
    checkImageForViolence(imageBuffer: Buffer): Promise<number>;
    checkImageForPornography(imageBuffer: Buffer): Promise<number>;
    analyzeFacialExpression(imageBuffer: Buffer): Promise<Record<string, string>>;
    detectEmotionInVoice(audioBuffer: Buffer): Promise<string>;
    speechToText(audioBuffer: Buffer): Promise<string>;
}
export type VendorsType = 'OpenAI' | 'Claude';
export type VendorsUrlType = 'https://api.openai.com/v1/chat/completions' | 'https://api.anthropic.com/v1/messages';
export type VendorsModelType = 'gpt-4o' | 'gpt-4o-turbo' | 'gpt-4' | 'gpt-4-turbo' | 'gpt-4-vision-preview' | 'gpt-4-32k' | 'gpt-3.5-turbo' | 'gpt-3.5-turbo-16k' | 'gpt-3.5-turbo-instruct' | 'dall-e-3' | 'dall-e-2' | 'whisper' | 'text-embedding-3-large' | 'text-embedding-3-small' | 'text-embedding-ada-002' | 'tts-1' | 'tts-1-hd' | 'claude-3-5-sonnet-20240620' | 'claude-3-opus-20240229' | 'claude-3-sonnet-20240229' | 'claude-3-haiku-20240307';
export type AssistantType = {
    apiKey: string;
    apiVendor: VendorsType;
    apiUrl?: VendorsUrlType;
    apiModel?: VendorsModelType;
};
export { Assistant };
